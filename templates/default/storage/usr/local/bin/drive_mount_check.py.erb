#!/usr/bin/python

from sys import exit
from smtplib import SMTP
from socket import gethostname
from swift.common.constraints import check_mount
from swift.common.utils import whataremyips
from swift.common.ring import Ring


try:
    ring = Ring('/etc/swift/object.ring.gz')
except IOError:
    exit()


my_ips = whataremyips()
mounted = 0
drivecount = 0
drivelabels = []

for dev in ring.devs:
    try:
        if dev['ip'] in my_ips and float(dev['weight']) > 0:
            drivecount += 1
            if check_mount('/srv/node', dev['device']):
                mounted += 1
            else:
                drivelabels.append(dev['device'])
    except TypeError:
        pass

unmounted = drivecount - mounted

if unmounted > 0:
    outdomain = '<%= @outdomain %>'
    fromaddr = 'swift-alert@' + outdomain
    toaddr = '<%= @email_addr %>' 
    if not '@' in toaddr:
        toaddr = toaddr + '@localhost'    
    subject = 'Drive(s) not mounted found on %s' % (gethostname(), )
    header = ('From: %s\r\nTo: %s\r\nSubject: %s\r\n\r\n'
              % (fromaddr, toaddr, subject))
    body = ('Unmounted drive(s) %s with labels %s'
            % (unmounted, ' '.join(drivelabels)))
    msg = header + body

    server = SMTP('localhost')
    server.set_debuglevel(0)
    server.sendmail(fromaddr, toaddr, msg)
    server.quit()

exit(0)
